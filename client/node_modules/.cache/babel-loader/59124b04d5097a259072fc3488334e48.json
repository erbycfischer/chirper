{"ast":null,"code":"var _jsxFileName = \"/Users/erbyfischer/Desktop/bootcamp/chirper/client/src/components/molecules/Feed.js\";\nimport React from 'react';\nimport PostChirp from '../atoms/PostChirp';\nimport Chirp from '../atoms/Chirp';\n\nclass Feed extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chirps: []\n    };\n    this.chirps = [];\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/feed\").then(res => res.json()).then(res => {\n      //console.log(res);\n      this.setState({\n        chirps: res\n      });\n    }).then(res => {\n      this.state.chirps.forEach(value => {\n        this.chirps.push(React.createElement(Chirp, {\n          key: value.id,\n          title: value.title,\n          text: value.text,\n          user: value.user,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }));\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"feed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(PostChirp, {\n      key: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), this.state.chirps.map(value => React.createElement(Chirp, {\n      key: value.id,\n      title: value.title,\n      text: value.text,\n      user: value.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Feed;","map":{"version":3,"sources":["/Users/erbyfischer/Desktop/bootcamp/chirper/client/src/components/molecules/Feed.js"],"names":["React","PostChirp","Chirp","Feed","Component","constructor","state","chirps","componentDidMount","fetch","then","res","json","setState","forEach","value","push","id","title","text","user","render","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAE/BC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAIA,SAAKA,MAAL,GAAc,EAAd;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAI;AACT;AACA,WAAKE,QAAL,CAAc;AACVN,QAAAA,MAAM,EAAEI;AADE,OAAd;AAGH,KAPL,EAOOD,IAPP,CAOaC,GAAD,IAAS;AACb,WAAKL,KAAL,CAAWC,MAAX,CAAkBO,OAAlB,CAA0BC,KAAK,IAAI;AAC/B,aAAKR,MAAL,CAAYS,IAAZ,CAAiB,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAED,KAAK,CAACE,EAAlB;AAAsB,UAAA,KAAK,EAAEF,KAAK,CAACG,KAAnC;AAA0C,UAAA,IAAI,EAAEH,KAAK,CAACI,IAAtD;AAA4D,UAAA,IAAI,EAAEJ,KAAK,CAACK,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB;AACH,OAFD;AAGH,KAXL;AAYH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKf,KAAL,CAAWC,MAAX,CAAkBe,GAAlB,CAAsBP,KAAK,IAAI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAK,CAACE,EAAlB;AAAsB,MAAA,KAAK,EAAEF,KAAK,CAACG,KAAnC;AAA0C,MAAA,IAAI,EAAEH,KAAK,CAACI,IAAtD;AAA4D,MAAA,IAAI,EAAEJ,KAAK,CAACK,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CAFL,CADJ;AAMH;;AAhC8B;;AAmCjC,eAAejB,IAAf","sourcesContent":["import React from 'react';\nimport PostChirp from '../atoms/PostChirp';\nimport Chirp from '../atoms/Chirp';\n\nclass Feed extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            chirps: []\n        }\n\n        this.chirps = [];\n    }\n    componentDidMount() {\n        fetch(\"http://localhost:8080/feed\")\n            .then(res => res.json())\n            .then(res => {\n                //console.log(res);\n                this.setState({\n                    chirps: res\n                })\n            }).then((res) => {\n                this.state.chirps.forEach(value => {\n                    this.chirps.push(<Chirp key={value.id} title={value.title} text={value.text} user={value.user} />);\n                });\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"feed\">\n                <PostChirp key=\"1\" />\n                {this.state.chirps.map(value => <Chirp key={value.id} title={value.title} text={value.text} user={value.user} />)}\n            </div>\n        );\n    }\n  }\n\n  export default Feed;"]},"metadata":{},"sourceType":"module"}